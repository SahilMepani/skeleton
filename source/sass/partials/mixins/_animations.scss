@mixin stagger-animation($animation, $child, $interval: 100) {
	$delay: $interval;

	visibility: visible;
	animation-duration: 1s;
	animation-fill-mode: both;
	animation-name: $animation;

	@for $i from 1 through $child {
		$delay: $delay + $interval;

		&:nth-child(#{$i}) {
			animation-delay: $delay + "ms";
		}
	}
}

@mixin animate-underline-on-hover(
	$text-color: currentColor,
	$border-color: currentColor
) {
	position: relative;
	transition: 0.2s;

	/* If text is wrapped in two lines, it stops working so avoid using it for larger text */
	padding-bottom: rem-calc(1px);

	&::after {
		background-color: $border-color;
		height: rem-calc(1px);
		position: absolute;
		right: 0;
		bottom: 0;
		left: 0;
		transform: scale(0);
		transition: 0.25s transform ease-out;
		content: "";
	}

	&:hover,
	&:active {
		color: $text-color;

		&::after {
			transform: scale(1);
		}
	}
}

@mixin animate-line-on-hover(
	$text-color: currentColor,
	$border-color: currentColor
) {
	position: relative;
	transition: 0.2s;

	/* If text is wrapped in two lines, it stops working so avoid using it for larger text */
	padding-bottom: rem-calc(1px);

	&::after {
		background-color: $border-color;
		height: rem-calc(1px);
		position: absolute;
		right: 0;
		bottom: 0;
		left: 0;
		transform: scaleX(0);
		transition: 0.3s transform;
		content: "";
		transform-origin: 100% 100%;
	}

	&:hover,
	&:active {
		color: $text-color;

		&::after {
			transform: scaleX(1);
			transform-origin: 0 0;
		}
	}
}

@mixin animate-background-underline-on-hover(
	$text-color: currentColor,
	$background-start-color: currentColor,
	$background-end-color: currentColor
) {
	background-image: linear-gradient(
		to right,
		$background-start-color,
		$background-end-color
	);
	transition: background 0.2s ease-out;
	background-size: 0 rem-calc(2px);
	background-position: left bottom;
	background-repeat: no-repeat;
	padding-bottom: rem-calc(2px);

	&:hover,
	&:active {
		color: $text_color;
		background-size: 100% rem-calc(2px);
	}
}
