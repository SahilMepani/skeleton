/* Quickly modify global styling by enabling or disabling optional features. */

$enable-caret: false;
$enable-rounded: false;
$enable-shadows: false;
$enable-gradients: false;
$enable-transitions: true;
$enable-reduced-motion: true;
$enable-smooth-scroll: true;
$enable-grid-classes: true;
$enable-button-pointers: true;
$enable-rfs: false;
$enable-validation-icons: false;

// if enabled we also need to uncomment the negative margin utilites in utilities overwrite file
$enable-negative-margins: true; // different than gutter classes
$enable-deprecation-messages: true;
$enable-important-utilities: true;

// Do not generate css properties/variables for colors
$colors: null;

// Project theme colors
// update/delete as per project
// pure white and pure black are defined by default
$body: $gray-600;
$heading: $black;
$primary: $blue;
$secondary: $gray-600;
$success: $green;
$info: $cyan;
$danger: $red;
$light: $gray-300;
$dark: $gray-900;

// This will generate .btn-*, .btn-outline-*, text-*, .link-*, .bg-*, border-* classes
// Use less colors as possible to save kb
$theme-colors: (
	// as per the project
	"blue": #000,
	// required
	"body": $body,
	"heading": $heading,
	"primary": $primary,
	"secondary": $secondary
);

// Links
// Style anchor elements.
$link-color: $primary;
$link-decoration: underline;
$link-shade-percentage: 20%;
$link-hover-color: shift-color($link-color, $link-shade-percentage);
$link-hover-decoration: null;

// Settings for the `<body>` element.
$body-color: $body;
$body-bg: $white;

// Paragraphs
// Style p element.
$paragraph-margin-bottom: calc(32 / $rem-base-unitless) * 1rem;

// should be defined in this file
$container-padding-x: calc(24 / $rem-base-unitless) * 1rem; // cannot be less than $grid gutter one side, this size works best on mobile

// This variable affects the `.pt-*` and `.mb-*` classes etc.
$spacer: calc(32 / $rem-base-unitless) * 1rem; // used on many other components
$spacers: (
	0: 0,
	1: calc(4 / $rem-base-unitless) * 1rem,
	2: calc(8 / $rem-base-unitless) * 1rem,
	3: calc(12 / $rem-base-unitless) * 1rem,
	4: calc(16 / $rem-base-unitless) * 1rem,
	5: calc(20 / $rem-base-unitless) * 1rem,
	6: calc(24 / $rem-base-unitless) * 1rem,
	7: calc(28 / $rem-base-unitless) * 1rem,
	8: calc(32 / $rem-base-unitless) * 1rem,
	9: calc(36 / $rem-base-unitless) * 1rem,
	10: calc(40 / $rem-base-unitless) * 1rem,
	11: calc(48 / $rem-base-unitless) * 1rem,
	12: calc(56 / $rem-base-unitless) * 1rem,
	13: calc(64 / $rem-base-unitless) * 1rem,
	14: calc(72 / $rem-base-unitless) * 1rem,
	15: calc(80 / $rem-base-unitless) * 1rem,
	16: calc(88 / $rem-base-unitless) * 1rem,
	17: calc(96 / $rem-base-unitless) * 1rem,
	18: calc(112 / $rem-base-unitless) * 1rem,
	19: calc(128 / $rem-base-unitless) * 1rem,
	20: calc(144 / $rem-base-unitless) * 1rem
);

// It prefixes the keys with `n` and makes the value negative.
$negative-spacers: if($enable-negative-margins, negativify-map($spacers), null);

// @debug $negative-spacers;

// Grid breakpoints
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

// New breakpoints - never use rem/%
// if you don't want to generate the utility classes for it. You can add the breakpoint in base-style file
$grid-breakpoints: (
	xs: $xs,
	ph: $ph,
	sm: $sm,
	md: $md,
	lg: $lg,
	xl: $xl,
	xxl: $xxl
);

// @debug $grid-breakpoints;

// Grid containers
// Define the maximum width of `.container` for different screen sizes.
// Do not use pixel values. Use rem to scale on higher size screens

$container-max-widths: (
	ph: 100vw,
	sm: 100vw,
	md: 95vw,
	lg: 93vw,
	xl: 93vw,
	xxl: 93vw,
	// max-width value needs to be less than the (breakpoint value(xxl) - $container-padding)
	// any property added here should also be added to grid breakpoints
	// xxxl : 144rem,
	// if you don't want to generate the utility classes for it. You can add the breakpoint in base-style file,
);

// Grid columns
// Set the number of columns and specify the width of the gutters.

// $grid-columns:                12;
$grid-gutter-width: calc(24 / $rem-base-unitless) * 1rem; // gets divided by 2 for each side
// $grid-row-columns:            6;

$gutters: $spacers;

// Typography
// Font, line-height, and color for body text, headings, and more.

// $font-size-root effects the value of `rem`, which is used for as well font sizes, paddings and margins
// $font-size-base effects the font size of the body text
$font-family-base: "Montserrat", $font-family-sans-serif;

// $font-size-root: 100%; // 10px
$font-size-base: 1rem; // Assumes the browser default, typically `16px`
// $font-size-sm:                $font-size-base * .875;
// $font-size-lg:                $font-size-base * 1.25;

// $font-weight-base:            $font-weight-normal;

$line-height-base: 1;
$line-height-sm: 1.3;
$line-height-lg: 1.55; // used for paragraph and other block level elements

// $h1-font-size:                $font-size-base * 2.5;
// $h2-font-size:                $font-size-base * 2;
// $h3-font-size:                $font-size-base * 1.75;
// $h4-font-size:                $font-size-base * 1.5;
// $h5-font-size:                $font-size-base * 1.25;
// $h6-font-size:                $font-size-base;

// have to set it again to use the updated values from top
// generate fs-* classes
$font-sizes: false;

// UP OR $font-sizes: (
//   1: $h1-font-size,
//   2: $h2-font-size,
//   3: $h3-font-size,
//   4: $h4-font-size,
//   5: $h5-font-size,
//   6: $h6-font-size
// );

$headings-margin-bottom: calc(24 / $rem-base-unitless) * 1rem;

// $headings-font-family: null;
// $headings-font-style: null;
// $headings-font-weight:        400;
// $headings-line-height:        1.2;
// $headings-color: null;

// uncomment to not display font sizes
// $display-font-sizes: null;

// only if you want to use display font sizes
// generate display-* classes
// cannot use rem-calc()
// $display-font-sizes: (
//   1: 5rem,
//   2: 4.5rem,
//   3: 4rem,
//   4: 3.5rem,
//   5: 3rem,
//   6: 2.5rem
// );

// $display-font-weight: 300 ;
// $display-line-height: $headings-line-height;

$lead-font-size: $font-size-base * 1.25;

// $lead-font-weight:            300;

// $small-font-size:             .875em;

// $sub-sup-font-size:           .75em;

// $text-muted:                  $gray-600;

// $blockquote-margin-y:         $spacer;
$blockquote-font-size: $font-size-base * 1.25;

// $blockquote-footer-color:     $gray-600;
// $blockquote-footer-font-size: $small-font-size;

// $aspect-ratios: map-merge(
//   (
//     "2x1": calc(1 / 2 * 100%),
//     "3x2": calc(2 / 3 * 100%),
//   ),
//   $aspect-ratios
// );

// Borders
////////////////////////////////////////////////
$border-width: calc(2 / $rem-base-unitless) * 1rem; // it will work by applying just border-top class
$border-widths: (
	1: calc(1 / $rem-base-unitless) * 1rem,
	2: calc(2 / $rem-base-unitless) * 1rem
);
$border-color: $primary; // it will work by applying just border-top class

// Tables
// Customizes the `.table` component with basic values, each used across all table variations.

$table-cell-padding-y: 1rem;
$table-cell-padding-x: 1rem;
$table-cell-padding-y-sm: 0.5rem;
$table-cell-padding-x-sm: 0.5rem;
$table-cell-vertical-align: top;
$table-color: $body-color;
$table-bg: transparent;
$table-th-font-weight: null;
$table-striped-color: $table-color;
$table-striped-bg-factor: 0.05;
$table-striped-bg: rgba($black, $table-striped-bg-factor);
$table-active-color: $table-color;
$table-active-bg-factor: 0.1;
$table-active-bg: rgba($black, $table-active-bg-factor);
$table-hover-color: $table-color;
$table-hover-bg-factor: 0.075;
$table-hover-bg: rgba($black, $table-hover-bg-factor);
$table-border-factor: 0.1;
$table-border-width: $border-width;
$table-border-color: $border-color;
$table-striped-order: odd;
$table-group-separator-color: currentcolor;
$table-caption-color: $text-muted;
$table-bg-scale: -80%;

// replace values to generate different colors tables
// by default it generates the following commented code
// $table-variants: (
//   "primary":    shift-color($primary, $table-bg-scale),
//   "secondary":  shift-color($secondary, $table-bg-scale),
//   "success":    shift-color($success, $table-bg-scale),
//   "info":       shift-color($info, $table-bg-scale),
//   "warning":    shift-color($warning, $table-bg-scale),
//   "danger":     shift-color($danger, $table-bg-scale),
//   "light":      $light,
//   "dark":       $dark,
// );

// Buttons + Forms
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.

// $input-btn-padding-y:         .5rem;
// $input-btn-padding-x:         1rem;
// $input-btn-font-family:       null;
// $input-btn-font-size:         $font-size-base;
// $input-btn-line-height:       1.3;

// $input-btn-focus-width:         0;
// $input-btn-focus-color-opacity: .25;
// $input-btn-focus-color:         rgba($component-active-bg, $input-btn-focus-color-opacity);
// $input-btn-focus-blur:          0;
// $input-btn-focus-box-shadow:    0 0 $input-btn-focus-blur $input-btn-focus-width $input-btn-focus-color;

// $input-btn-padding-y-sm:      .25rem;
// $input-btn-padding-x-sm:      .5rem;
// $input-btn-font-size-sm:      $font-size-sm;

// $input-btn-padding-y-lg:      .5rem;
// $input-btn-padding-x-lg:      1rem;
// $input-btn-font-size-lg:      $font-size-lg;

// $input-btn-border-width:      $border-width;

// Buttons
// For each of Bootstrap's buttons, define text, background, and border color.

// scss-docs-start btn-variables
$btn-padding-y: calc(12 / $rem-base-unitless) * 1rem;
$btn-padding-x: calc(20 / $rem-base-unitless) * 1rem;
$btn-font-family: null;
$btn-font-size: $font-size-base;
$btn-line-height: 1.3;
$btn-white-space: null; // Set to `nowrap` to prevent text wrapping

$btn-padding-y-sm: calc(8 / $rem-base-unitless) * 1rem;
$btn-padding-x-sm: calc(16 / $rem-base-unitless) * 1rem;
$btn-font-size-sm: $font-size-base;
$btn-padding-y-lg: calc(16 / $rem-base-unitless) * 1rem;
$btn-padding-x-lg: calc(32 / $rem-base-unitless) * 1rem;
$btn-font-size-lg: $font-size-base;
$btn-border-width: 1px;
$btn-font-weight: $font-weight-normal;
$btn-box-shadow: inset 0 1px 0 rgba($white, 0.15), 0 1px 1px rgba($black, 0.075);
$btn-focus-width: 0;
$btn-focus-box-shadow: 0;
$disabled-opacity: 0.65;
$btn-active-box-shadow: inset 0 3px 5px rgba($black, 0.125);
$btn-link-color: $link-color;
$btn-link-hover-color: $link-hover-color;
$btn-link-disabled-color: $gray-600;

// Allows for customizing button radius independently from global border radius
$btn-border-radius: $border-radius;
$btn-border-radius-sm: $border-radius-sm;
$btn-border-radius-lg: $border-radius-lg;
$btn-transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,
	border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
$btn-hover-bg-shade-amount: 15%;
$btn-hover-bg-tint-amount: 15%;
$btn-hover-border-shade-amount: 20%;
$btn-hover-border-tint-amount: 10%;
$btn-active-bg-shade-amount: 20%;
$btn-active-bg-tint-amount: 20%;
$btn-active-border-shade-amount: 25%;
$btn-active-border-tint-amount: 10%;

// Forms

$input-padding-y: calc(16 / $rem-base-unitless) * 1rem;
$input-padding-x: calc(16 / $rem-base-unitless) * 1rem;
$input-font-family: null;
$input-font-size: $font-size-base;
$input-font-weight: $font-weight-base;
$input-line-height: 1.3;
$input-padding-y-sm: calc(8 / $rem-base-unitless) * 1rem;
$input-padding-x-sm: calc(8 / $rem-base-unitless) * 1rem;
$input-font-size-sm: $font-weight-base;
$input-padding-y-lg: calc(20 / $rem-base-unitless) * 1rem;
$input-padding-x-lg: calc(20 / $rem-base-unitless) * 1rem;
$input-font-size-lg: $font-weight-base;
$input-bg: $white;
$input-disabled-bg: $gray-200;
$input-disabled-border-color: null;
$input-color: $body-color;
$input-border-color: $gray-400;
$input-border-width: 0.1rem;
$input-box-shadow: 0;
$input-border-radius: 0;
$input-border-radius-sm: 0;
$input-border-radius-lg: 0;
$input-focus-bg: $input-bg;
$input-focus-border-color: tint-color($component-active-bg, 50%);
$input-focus-color: $input-color;
$input-focus-width: 0;
$input-focus-box-shadow: 0;
$input-placeholder-color: $gray-600;
$input-plaintext-color: $body-color;
$input-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

// Alerts
// Define alert colors, border radius, and padding.

// scss-docs-start alert-variables
$alert-padding-y: calc(12 / $rem-base-unitless) * 1rem;
$alert-padding-x: calc(20 / $rem-base-unitless) * 1rem;
$alert-margin-bottom: 0;
$alert-border-radius: $border-radius;
$alert-link-font-weight: $font-weight-bold;
$alert-border-width: $border-width;
$alert-bg-scale: -80%;
$alert-border-scale: -70%;
$alert-color-scale: 40%;
