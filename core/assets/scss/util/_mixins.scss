@use 'sass:math';
@use 'functions' as *;

@mixin ratio($width, $height) {
	position: relative;
	max-width: rem-calc($width);
	max-height: rem-calc($height);
	font-size: 0;

	&::after {
		content: '';
		display: inline-block;
		width: 100%;
		padding-top: math.div($height, $width) * 100%;
	}

	img {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
}

@mixin line-clamp($lines) {
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: #{$lines};
	overflow: hidden;
	text-overflow: ellipsis;
}

///
/// sequential-delay
///
/// Adds sequential delay to the
/// specified number of children.
///
/// @param number $length
/// @param time $delayAmount
///
@mixin sequential-delay( $length, $delayAmount: 100ms, $child: '', $addedDelay: 0s) {
	@for $x from 1 through $length {
		&:nth-child( #{ $x } ) #{ $child } {
			transition-delay: #{ ( $x - 1 ) * $delayAmount + $addedDelay };
		}
	}

	&:nth-child( n + #{ $length + 1 } ) {
		transition-delay: #{ $delayAmount * $length };
	}
}
